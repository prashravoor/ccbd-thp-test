#! /usr/bin/env stap

global fault_entry_time, fault_address, fault_access
global time_offset

probe begin { time_offset = gettimeofday_us() }

probe vm.pagefault {
  t = gettimeofday_us()
  fault_entry_time[tid()] = t
  fault_address[tid()] = address
  fault_access[tid()] = write_access ? "w" : "r"
}

probe vm.pagefault.return {
  t=gettimeofday_us()
  if( pid() == target()) {
          if (!(tid() in fault_entry_time)) next
              e = t - fault_entry_time[tid()]
                  if (vm_fault_contains(fault_type,VM_FAULT_MINOR)) {
                      ftype="minor"
                  } else if (vm_fault_contains(fault_type,VM_FAULT_MAJOR)) {
                      ftype="major"
                  } else {
                      next #only want to deal with minor and major page faults
                  }
          sym = symname(fault_address[tid()])

              printf("%d:%d:%d:%id:%s:%s:%d:%s\n",
                      t - time_offset, pid(), tid(), fault_address[tid()], fault_access[tid()], ftype, e, sym)
  }
  #printf("%s\n",sprint_ubacktrace())
  #print_backtrace()
  #free up memory
  delete fault_entry_time[tid()]
  delete fault_address[tid()]
  delete fault_access[tid()]
}

